/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xmipp_Filename */

#ifndef _Included_xmipp_jni_Filename
#define _Included_xmipp_jni_Filename
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     xmipp_Filename
 * Method:    hasStackExtension
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_xmipp_jni_Filename_hasStackExtension
  (JNIEnv *, jclass, jstring);

/*
 * Class:     xmipp_Filename
 * Method:    hasVolumeExtension
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_xmipp_jni_Filename_hasVolumeExtension
  (JNIEnv *, jclass, jstring);

/*
 * Class:     xmipp_Filename
 * Method:    hasVolumeExtension
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_xmipp_jni_Filename_isMetaDataFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     xmipp_Filename
 * Method:    compose
 * Signature: (ILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xmipp_jni_Filename_compose
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     xmipp_Filename
 * Method:    compose
 * Signature: (ILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xmipp_jni_Filename_getXmippPath
  (JNIEnv *, jclass);
#ifdef __cplusplus
}
#endif
#endif
